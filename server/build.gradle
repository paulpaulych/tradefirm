plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id "org.jetbrains.kotlin.plugin.allopen" version '1.3.71'
    id "org.springframework.boot"
}

apply plugin: 'war'
apply plugin: "kotlin-spring"
apply plugin: 'jacoco'
apply plugin: "org.sonarqube"

sourceCompatibility = 1.8
//TODO:опубликовать simple-orm в репозиторий и нормально переиспользовать его зависимости
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-serialization"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0")


    compile(files("../libs/simple-orm-core-${simpleOrmVersion}.jar"))

    compile files('../libs/common-utils-1.0.1.jar')
    compile "io.mockk:mockk:1.9.3"
    compile group: 'cglib', name: 'cglib', version: '3.3.0'

    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion")

    compile("org.springframework.boot:spring-boot-starter:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jetty:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")
    compile("org.springframework.security:spring-security-jwt:1.1.0.RELEASE")

    compile("io.jsonwebtoken:jjwt:0.9.1")
    compile("org.postgresql:postgresql:$postgresDriverVersion")

    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    implementation("io.kotlintest:kotlintest-runner-junit5:3.1.10")
    testImplementation("io.kotlintest:kotlintest-extensions-spring:3.1.10")

    compile("com.expediagroup:graphql-kotlin-spring-server:$graphqlKotlinVersion"){
        exclude(group: 'com.fasterxml.jackson.module')
    }
    compile 'com.graphql-java:graphql-java-extended-scalars:1.0'
//    implementation("io.projectreactor:reactor-test:$reactorVersion")

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

allOpen{
    annotation("paulpaulych.utils.Open")
    annotation("org.springframework.context.annotation.Configuration")
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
    finalizedBy jacocoTestReport
}

jacoco{
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main"
    }
}

bootWar{
    enabled = true
}

springBoot{
    mainClassName = "paulpaulych.tradefirm.AppKt"
}

bootRun{
    systemProperties = System.properties
}